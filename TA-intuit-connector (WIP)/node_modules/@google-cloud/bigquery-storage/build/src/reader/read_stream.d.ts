import * as gax from 'google-gax';
import * as protos from '../../protos/protos';
import { ReadClient } from './read_client';
import { Readable } from 'stream';
type ReadSession = protos.google.cloud.bigquery.storage.v1.IReadSession;
export type RemoveListener = {
    off: () => void;
};
/**
 * ReadStream is responsible for reading data from a GRPC read stream
 * connection against the Storage Read API readRows method.
 *
 * @class
 * @extends EventEmitter
 * @memberof reader
 */
export declare class ReadStream {
    private _streamName;
    private _offset;
    private _readClient;
    private _session;
    private _readStream;
    private _connection;
    private _callOptions?;
    constructor(streamName: string, session: ReadSession, readClient: ReadClient, options?: gax.CallOptions);
    open(): void;
    private trace;
    private handleError;
    private isRetryableError;
    private processReadRowsResponse;
    /**
     * Get the name of the read stream associated with this connection.
     */
    getStreamName: () => string;
    getReadSession(): ReadSession;
    getRowsStream(): Readable;
    /**
     * Check if connection is open and ready to read data.
     */
    isOpen(): boolean;
    /**
     * Reconnect and re-open readRows channel.
     */
    reconnect(): void;
    /**
     * Close the read stream connection.
     */
    close(): void;
}
export {};
