import { Transform, TransformCallback } from 'stream';
import { RecordBatch, RecordBatchStreamReader } from 'apache-arrow';
import * as protos from '../../protos/protos';
type ReadRowsResponse = protos.google.cloud.bigquery.storage.v1.IReadRowsResponse;
type ReadSession = protos.google.cloud.bigquery.storage.v1.IReadSession;
/**
 * ArrowRawTransform implements a node stream Transform that reads
 * ReadRowsResponse from BigQuery Storage Read API and convert
 * a raw Arrow Record Batch.
 */
export declare class ArrowRawTransform extends Transform {
    constructor();
    _transform(response: ReadRowsResponse, _: BufferEncoding, callback: TransformCallback): void;
}
/**
 * ArrowRecordReaderTransform implements a node stream Transform that reads
 * a byte stream of raw Arrow Record Batch and convert to a stream of Arrow
 * RecordBatchStreamReader.
 */
export declare class ArrowRecordReaderTransform extends Transform {
    private session;
    constructor(session: ReadSession);
    _transform(serializedRecordBatch: Uint8Array, _: BufferEncoding, callback: TransformCallback): void;
}
/**
 * ArrowRecordBatchTransform implements a node stream Transform that reads
 * a RecordBatchStreamReader and convert a stream of Arrow RecordBatch.
 */
export declare class ArrowRecordBatchTransform extends Transform {
    constructor();
    _transform(reader: RecordBatchStreamReader, _: BufferEncoding, callback: TransformCallback): void;
}
/**
 * ArrowRecordBatchTableRowTransform implements a node stream Transform that reads
 * an Arrow RecordBatch and convert a stream of BigQuery TableRow.
 */
export declare class ArrowRecordBatchTableRowTransform extends Transform {
    constructor();
    _transform(batch: RecordBatch, _: BufferEncoding, callback: TransformCallback): void;
}
export {};
