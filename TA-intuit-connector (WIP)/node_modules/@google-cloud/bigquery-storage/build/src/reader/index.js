"use strict";
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.setLogFunction = exports.AvroFormat = exports.ArrowFormat = exports.ReadStream = exports.ArrowTableReader = exports.TableReader = exports.ReadClient = void 0;
/**
 * Package reader provides an EXPERIMENTAL thick client around the
 * BigQuery storage API's BigQueryReadClient.
 * More information about this new read client may also be found in
 * the public documentation: https://cloud.google.com/bigquery/docs/read-api
 *
 * It is EXPERIMENTAL and subject to change or removal without notice. This is primarily to signal that this
 * package may still make breaking changes to existing methods and functionality.
 *
 * @namespace reader
 */
var read_client_1 = require("./read_client");
Object.defineProperty(exports, "ReadClient", { enumerable: true, get: function () { return read_client_1.ReadClient; } });
var table_reader_1 = require("./table_reader");
Object.defineProperty(exports, "TableReader", { enumerable: true, get: function () { return table_reader_1.TableReader; } });
var arrow_reader_1 = require("./arrow_reader");
Object.defineProperty(exports, "ArrowTableReader", { enumerable: true, get: function () { return arrow_reader_1.ArrowTableReader; } });
var read_stream_1 = require("./read_stream");
Object.defineProperty(exports, "ReadStream", { enumerable: true, get: function () { return read_stream_1.ReadStream; } });
var data_format_1 = require("./data_format");
Object.defineProperty(exports, "ArrowFormat", { enumerable: true, get: function () { return data_format_1.ArrowFormat; } });
Object.defineProperty(exports, "AvroFormat", { enumerable: true, get: function () { return data_format_1.AvroFormat; } });
var logger_1 = require("../util/logger");
Object.defineProperty(exports, "setLogFunction", { enumerable: true, get: function () { return logger_1.setLogFunction; } });
// polyfill array.at for Node < 14. Remove after Node 14 is deprecated.
require("core-js/full/array/at");
//# sourceMappingURL=index.js.map