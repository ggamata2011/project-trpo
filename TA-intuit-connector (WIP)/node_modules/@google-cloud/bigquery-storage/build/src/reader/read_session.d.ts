import { ResourceStream } from '@google-cloud/paginator';
import * as protos from '../../protos/protos';
import { TableReference, ReadClient } from './read_client';
import { DataFormat } from './data_format';
type ReadRowsResponse = protos.google.cloud.bigquery.storage.v1.IReadRowsResponse;
type ReadSessionInfo = protos.google.cloud.bigquery.storage.v1.IReadSession;
declare const ReadSessionInfo: typeof protos.google.cloud.bigquery.storage.v1.ReadSession;
export type GetStreamOptions = {
    /**
     * Row limit of the table.
     */
    maxResults?: number;
    /**
     * Subset of fields to return, supports select into sub fields. Example: selected_fields = "a,e.d.f";
     */
    selectedFields?: string;
};
/**
 * A ReadSession represents a Read Session from the BigQuery
 * Storage Read API.
 *
 * Read more on:https://cloud.google.com/bigquery/docs/reference/storage/rpc/google.cloud.bigquery.storage.v1#readsession
 *
 * @class
 * @memberof reader
 */
export declare class ReadSession {
    private _info;
    private _tableRef;
    private _format;
    private _readStreams;
    private _readClient;
    constructor(readClient: ReadClient, tableRef: TableReference, format: DataFormat);
    getSessionInfo(): ReadSessionInfo | null;
    private trace;
    private getOrCreateSession;
    /**
     * Get a merged stream of ReadRowsResponse from all ReadStream
     * under this ReadSession.
     *
     * @param {GetStreamOptions} options
     */
    getStream(options?: GetStreamOptions): Promise<ResourceStream<ReadRowsResponse>>;
    close(): void;
}
export {};
